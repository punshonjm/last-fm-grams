{"version":3,"sources":["utils/groupSequential.js","api.js","components/MainApp/appContext.js","components/Feed/Feed.js","components/MainApp/index.js","App.js","serviceWorker.js","index.js"],"names":["groupSequential","collection","predicate","groups","lastUsed","ci","forEach","item","key","items","push","Object","values","api","axios","create","baseURL","interceptors","request","use","config","params","api_key","process","format","getUserInfo","user","get","getUserFriends","getUserRecentTracks","getUserTopAlbums","getUserTopArtists","getUserTopTracks","getUserWeeklyAlbums","getUserWeeklyArtists","getUserWeeklyTracks","getImage","images","reverse","getText","value","mapTracks","tracks","map","artist","album","name","mbid","url","date","image","getPlayTimeline","a","friends","data","users","Promise","all","track","recenttracks","usersTracks","orderBy","concat","AppContext","React","createContext","undefined","AppContextProvider","children","useState","setUser","context","u","localStorage","setItem","JSON","stringify","updateUserData","foundUser","playcount","country","useEffect","storedUser","getItem","parse","error","Provider","useAppContext","useContext","Title","Typography","Text","Feed","loading","setLoading","setData","timeline","setTimeline","loadUserData","dataPieces","playTimeline","recentTracks","topAlbums","topalbums","topArtists","topartists","topTracks","toptracks","weeklyAlbums","weeklyalbumchart","weeklyArtists","weeklyartistchart","weeklyTracks","weeklytrackchart","justify","span","lg","Array","fill","uniqueId","style","marginBottom","avatar","paragraph","rows","cover","alt","src","Meta","title","level","display","strong","type","marginTop","textAlign","MainApp","collapsed","setCollapsed","minHeight","Sider","breakpoint","collapsedWidth","collapsible","trigger","className","height","mode","theme","borderRight","defaultSelectedKeys","Item","PicCenterOutlined","Header","background","padding","onClick","marginLeft","MenuUnfoldOutlined","fontSize","MenuFoldOutlined","float","margin","color","size","icon","UserOutlined","Content","gutter","App","setupUser","setSetupUser","getUserDetails","response","message","console","log","label","onChange","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"kaAuBeA,EAtBS,SAACC,EAAYC,GACnC,IAAMC,EAAS,GACXC,EAAW,KACXC,EAAK,EAgBT,OAdAJ,EAAWK,SAAQ,SAACC,GACdA,EAAKL,KAAeE,IACtBC,GAAM,EACND,EAAWG,EAAKL,GAChBC,EAAO,GAAD,OAAIE,EAAJ,YAAUD,IAAhB,eACKG,EADL,CAEEC,IAAKJ,EACLK,MAAO,CAACF,MAIZJ,EAAO,GAAD,OAAIE,EAAJ,YAAUD,IAAYK,MAAMC,KAAKH,MAGlCI,OAAOC,OAAOT,ICZjBU,EAAMC,IAAMC,OAAO,CACvBC,QAJc,sCAOhBH,EAAII,aAAaC,QAAQC,KAAI,SAACC,GAI5B,OAHAA,EAAOC,OAASD,EAAOC,QAAU,GACjCD,EAAOC,OAAOC,QARDC,mCASbH,EAAOC,OAAOG,OAAS,OAChBJ,KAGF,IAAMK,EAAc,SAACC,GAAD,OAAUb,EAClCc,IADkC,qCACAD,KAExBE,EAAiB,SAACF,GAAD,OAAUb,EACrCc,IADqC,wCACAD,KAE3BG,EAAsB,SAACH,GAAD,OAAUb,EAC1Cc,IAD0C,6CACAD,KAEhCI,EAAmB,SAACJ,GAAD,OAAUb,EACvCc,IADuC,0CACAD,KAE7BK,EAAoB,SAACL,GAAD,OAAUb,EACxCc,IADwC,2CACAD,KAE9BM,EAAmB,SAACN,GAAD,OAAUb,EACvCc,IADuC,0CACAD,KAE7BO,EAAsB,SAACP,GAAD,OAAUb,EAC1Cc,IAD0C,iDACID,KAEpCQ,EAAuB,SAACR,GAAD,OAAUb,EAC3Cc,IAD2C,kDACID,KAErCS,EAAsB,SAACT,GAAD,OAAUb,EAC1Cc,IAD0C,iDACID,KAE3CU,EAAW,SAACC,GAAY,IAAD,EACXA,EAAOC,UACvB,OAF2B,qBAKvBC,EAAU,SAACC,GAAD,OAAWA,EAAM,UAAYA,GAEvCC,EAAY,SAACC,EAAQhB,GAAT,OAAkBgB,EAAOC,KAAI,gBAC7CC,EAD6C,EAC7CA,OACAC,EAF6C,EAE7CA,MACAC,EAH6C,EAG7CA,KACAC,EAJ6C,EAI7CA,KACAC,EAL6C,EAK7CA,IACAC,EAN6C,EAM7CA,KACOZ,EAPsC,EAO7Ca,MAP6C,MAQxC,CACLN,OAAQL,EAAQK,GAChBC,MAAON,EAAQM,GACfC,OACAC,OACAC,MACAC,KAAMV,EAAQU,GACdC,MAAOX,EAAQH,EAASC,IACxBX,YAGWyB,EAAe,uCAAG,WAAOzB,GAAP,uBAAA0B,EAAA,sEAC0BxB,EAAeF,GADzC,uBACI2B,EADJ,EACrBC,KAAQD,QAAW3B,KACrB6B,EAFuB,CAEd7B,GAFc,mBAEL2B,EAAQV,KAAI,qBAAGG,UAFV,SAIHU,QACvBC,IAAIF,EACFZ,IADE,uCACE,WAAOjB,GAAP,mBAAA0B,EAAA,sEACoBvB,EAAoBH,GADxC,uBACK4B,EADL,EACKA,KACgBI,EAAYJ,EAA5BK,aAAgBD,MAFrB,kBAGI1D,EAAgByC,EAAUiB,EAAOhC,GAAO,UAH5C,2CADF,wDALsB,cAIvBkC,EAJuB,OAYvBN,EAAOO,IAAQC,IAAM,WAAN,cAAUF,IAAc,CAAC,QAAS,CAAC,SAZ3B,kBAatB,CAAEN,SAboB,4CAAH,sD,4GCvDfS,EAAaC,IAAMC,mBAAcC,GAEjCC,EAAqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC1BJ,IAAMK,cAASH,GADW,mBAC3CxC,EAD2C,KACrC4C,EADqC,KAI5CC,EAAU,CACd7C,OACA4C,QAAS,SAACE,GACRC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUlD,IAC5C4C,EAAQE,KAINK,EAAc,uCAAG,sCAAAzB,EAAA,yDAChB1B,EADgB,iEAIXD,EAAYC,EAAKoB,MAJN,gBAGLgC,EAHK,EAGnBxB,KAAQ5B,KAIRqD,EACED,EADFC,UAAWjC,EACTgC,EADShC,KAAME,EACf8B,EADe9B,IAAKgC,EACpBF,EADoBE,QAGxBV,EAAQ,CACNS,YAAWjC,OAAME,MAAKgC,YAXH,2CAAH,qDAiCpB,OAlBAhB,IAAMiB,WAAU,WACd,QAAaf,IAATxC,EAAoB,CACtB,IAAMwD,EAAaT,aAAaU,QAAQ,QACxC,GAAID,EACF,IAGE,OAFAZ,EAAQK,KAAKS,MAAMF,SACnBL,IAEA,MAAOQ,GAEP,YADAf,OAAQJ,SAKZO,aAAaC,QAAQ,OAAQC,KAAKC,UAAUlD,MAE7C,CAACA,IAGF,kBAACqC,EAAWuB,SAAZ,CAAqB9C,MAAO+B,GACzBH,IAMMmB,GAAgB,kBAAMvB,IAAMwB,WAAWzB,IC9D5C0B,GAAgBC,IAAhBD,MAAOE,GAASD,IAATC,KA6HAC,GA3HF,WAAO,IAAD,EACa5B,IAAMK,UAAS,GAD5B,mBACVwB,EADU,KACDC,EADC,OAEO9B,IAAMK,SAAS,IAFtB,mBAEJ0B,GAFI,aAGe/B,IAAMK,SAAS,IAH9B,mBAGV2B,EAHU,KAGAC,EAHA,KAITvE,EAAS6D,KAAT7D,KAIFwE,EAAY,uCAAG,gDAAA9C,EAAA,6DACnB0C,GAAW,GADQ,SAGMtC,QAAQC,IAAI,CACnC5C,EAAoBa,EAAKoB,MACzBjC,EAAwBa,EAAKoB,MAC7BjC,EAAqBa,EAAKoB,MAC1BjC,EAAsBa,EAAKoB,MAC3BjC,EAAqBa,EAAKoB,MAC1BjC,EAAwBa,EAAKoB,MAC7BjC,EAAyBa,EAAKoB,MAC9BjC,EAAwBa,EAAKoB,QAXZ,OAGbqD,EAHa,SAuBfA,EACDxD,KAAI,qBAAGW,QAxBS,mBAejB8C,EAfiB,KAgBDC,EAhBC,KAgBf1C,aACW2C,EAjBI,KAiBfC,UACYC,EAlBG,KAkBfC,WACWC,EAnBI,KAmBfC,UACkBC,EApBH,KAoBfC,iBACmBC,EArBJ,KAqBfC,kBACkBC,EAtBH,KAsBfC,iBAIJlB,EAAQ,CACNM,eACAC,YACAE,aACAE,YACAE,eACAE,gBACAE,iBAGFf,EAAYG,GAEZN,GAAW,GAtCQ,2CAAH,qDA6ClB,OAJA9B,IAAMiB,WAAU,WACdiB,MACC,CAAC,OAEAL,EAEA,kBAAC,IAAD,CAAKqB,QAAQ,UACX,kBAAC,IAAD,CAAKC,KAAM,GAAIC,GAAI,IAChBC,MAAM,GAAGC,KAAK,MAAM3E,KAAI,kBACvB,kBAAC,IAAD,CAAMnC,IAAK+G,IAAS,YAAaC,MAAO,CAAEC,aAAc,QACtD,kBAAC,IAAD,CAAUC,QAAM,EAACC,UAAW,CAAEC,KAAM,WAS9C,oCACG5B,EAASrD,KAAI,SAACe,GAAD,OACZ,kBAAC,IAAD,CAAKwD,QAAQ,SAAS1G,IAAG,UAAKkD,EAAMhC,KAAX,YAAmBgC,EAAMT,OAChD,kBAAC,IAAD,CAAKkE,KAAM,GAAIC,GAAI,IACjB,kBAAC,IAAD,CACEI,MAAO,CAAEC,aAAc,OACvBI,MACE,yBACEC,IAAG,UAAKpE,EAAMd,OAAX,cAAuBc,EAAMb,MAA7B,cAAwCa,EAAMZ,MACjDiF,IAAKrE,EAAMR,SAIf,kBAAC,IAAK8E,KAAN,CACEC,MACE,oCACE,kBAACxC,GAAD,CACEyC,MAAO,EACPV,MAAO,CAAEW,QAAS,QAASV,aAAc,MAExC/D,EAAMlD,KAAOkD,EAAMZ,MAErBY,EAAMlD,IACH,kBAACmF,GAAD,CAAM6B,MAAO,CAAEW,QAAS,SAAWC,QAAM,GAAE1E,EAAMd,QAEjD,oCACE,kBAAC+C,GAAD,CAAM6B,MAAO,CAAEW,QAAS,SAAWE,KAAK,aAAa3E,EAAMb,OAC3D,kBAAC8C,GAAD,CAAM6B,MAAO,CAAEW,QAAS,SAAWC,QAAM,GAAE1E,EAAMd,YAM7D,yBAAK4E,MAAO,CAAEc,UAAW,QACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnB,KAAM,IACT,kBAACxB,GAAD,CAAMyC,QAAM,GACT1E,EAAMhC,OAGX,kBAAC,IAAD,CAAKyF,KAAM,GAAIK,MAAO,CAAEe,UAAW,UACjC,kBAAC5C,GAAD,CAAM0C,KAAK,aAAX,aACa3E,EAAMT,iBC3G/B0C,GAASD,IAATC,KAyDO6C,GAvDC,WAAO,IAAD,EACcxE,IAAMK,UAAS,GAD7B,mBACboE,EADa,KACFC,EADE,KAEZhH,EAAS6D,KAAT7D,KAER,OACE,kBAAC,IAAD,CAAQ8F,MAAO,CAAEmB,UAAW,UAC1B,kBAAC,IAAOC,MAAR,CACEC,WAAW,KACXC,eAAe,IACfC,aAAW,EACXN,UAAWA,EACXO,QAAS,MAET,yBAAKC,UAAU,OAAOzB,MAAO,CAAE0B,OAAQ,UACvC,kBAAC,IAAD,CACEC,KAAK,SACLC,MAAM,OACN5B,MAAO,CAAE0B,OAAQ,OAAQG,YAAa,GACtCC,oBAAqB,CAAC,MAEtB,kBAAC,IAAKC,KAAN,CAAW/I,IAAI,KACb,kBAACgJ,EAAA,EAAD,MACA,6CAIN,kBAAC,IAAD,KACE,kBAAC,IAAOC,OAAR,CAAejC,MAAO,CAAEkC,WAAY,OAAQC,QAAS,IACnD,0BACEC,QAAS,kBAAMlB,GAAcD,IAC7BQ,UAAU,UACVzB,MAAO,CAAEqC,WAAY,SAEpBpB,EACG,kBAACqB,EAAA,EAAD,CAAoBtC,MAAO,CAAEuC,SAAU,SACvC,kBAACC,EAAA,EAAD,CAAkBxC,MAAO,CAAEuC,SAAU,UAE3C,0BAAMvC,MAAO,CAAEyC,MAAO,UACpB,kBAAC,GAAD,CAAM7B,QAAM,EAACZ,MAAO,CAAE0C,OAAQ,WAAaxI,EAAKoB,MAChD,kBAAC,IAAD,CAAKqH,MAAM,YAAYzI,EAAKqD,UAA5B,UACA,kBAAC,IAAD,CAAQqF,KAAK,QAAQC,KAAM,kBAACC,EAAA,EAAD,UAG/B,kBAAC,IAAOC,QAAR,CAAgB/C,MAAO,CAAE0C,OAAQ,QAC/B,kBAAC,IAAD,CAAKM,OAAQ,IACX,kBAAC,IAAD,CAAKrD,KAAM,IACT,kBAAC,GAAD,YCrDd,SAASsD,KAAO,IAAD,EACqBzG,IAAMK,SAAS,IADpC,mBACNqG,EADM,KACKC,EADL,OAEapF,KAAlB7D,EAFK,EAELA,KAAM4C,EAFD,EAECA,QAERsG,EAAc,uCAAG,0CAAAxH,EAAA,+EAIT3B,EAAYiJ,GAJH,gBAGH5F,EAHG,EAGjBxB,KAAQ5B,KAIRqD,EACED,EADFC,UAAWjC,EACTgC,EADShC,KAAME,EACf8B,EADe9B,IAAKgC,EACpBF,EADoBE,QAGxBV,EAAQ,CACNS,YAAWjC,OAAME,MAAKgC,YAXL,qDAcX6F,EAdW,KAcXA,UAdW,sBAgBTvH,EAASuH,EAATvH,MACCwH,QAjBQ,wBAkBfC,QAAQC,IAAI1H,EAAKwH,SAlBF,2BAsBnBC,QAAQC,IAAR,MAtBmB,yDAAH,qDA0BpB,OAAItJ,EACM,kBAAC,GAAD,MAIR,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8I,OAAQ,GACRhD,MAAO,CAAE0B,OAAQ,SACjBhC,QAAQ,UAER,kBAAC,IAAD,CAAKC,KAAM,IACT,kBAAC,IAAD,CAAM8B,UAAU,MAAMhB,MAAM,gBAAgBT,MAAO,CAAEc,UAAW,QAC9D,kBAAC,IAAKiB,KAAN,CAAW0B,MAAM,oBACf,kBAAC,IAAD,CACEzI,MAAOkI,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAaQ,EAAO3I,WAGlD,kBAAC,IAAK+G,KAAN,KACE,kBAAC,IAAD,CAAQK,QAASgB,EAAgBvC,KAAK,WAAtC,cAWC,yBACb,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKmC,OAAQ,IACX,kBAAC,IAAD,CAAKrD,KAAM,IACT,kBAAC,GAAD,UC/DYiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/G,GACL0F,QAAQ1F,MAAMA,EAAMyF,c","file":"static/js/main.30043349.chunk.js","sourcesContent":["\nconst groupSequential = (collection, predicate) => {\n  const groups = {};\n  let lastUsed = null;\n  let ci = 0;\n\n  collection.forEach((item) => {\n    if (item[predicate] !== lastUsed) {\n      ci += 1;\n      lastUsed = item[predicate];\n      groups[`${ci}.${lastUsed}`] = {\n        ...item,\n        key: lastUsed,\n        items: [item],\n      };\n    }\n\n    groups[`${ci}.${lastUsed}`].items.push(item);\n  });\n\n  return Object.values(groups);\n};\n\nexport default groupSequential;\n","import axios from 'axios';\nimport orderBy from 'lodash/orderBy';\nimport concat from 'lodash/concat';\nimport groupSequential from './utils/groupSequential';\n\nconst apiBase = 'https://ws.audioscrobbler.com/2.0';\nconst apiKey = process.env.REACT_APP_LAST_FM_API_KEY;\n\nconst api = axios.create({\n  baseURL: apiBase,\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.api_key = apiKey;\n  config.params.format = 'json';\n  return config;\n});\n\nexport const getUserInfo = (user) => api\n  .get(`/?method=user.getinfo&user=${user}`);\n\nexport const getUserFriends = (user) => api\n  .get(`/?method=user.getfriends&user=${user}`);\n\nexport const getUserRecentTracks = (user) => api\n  .get(`/?method=user.getrecenttracks&user=${user}`);\n\nexport const getUserTopAlbums = (user) => api\n  .get(`/?method=user.gettopalbums&user=${user}`);\n\nexport const getUserTopArtists = (user) => api\n  .get(`/?method=user.gettopartists&user=${user}`);\n\nexport const getUserTopTracks = (user) => api\n  .get(`/?method=user.gettoptracks&user=${user}`);\n\nexport const getUserWeeklyAlbums = (user) => api\n  .get(`/?method=user.getweeklyalbumchart&user=${user}`);\n\nexport const getUserWeeklyArtists = (user) => api\n  .get(`/?method=user.getweeklyartistchart&user=${user}`);\n\nexport const getUserWeeklyTracks = (user) => api\n  .get(`/?method=user.getweeklytrackchart&user=${user}`);\n\nconst getImage = (images) => {\n  const [image] = images.reverse();\n  return image;\n};\n\nconst getText = (value) => value['#text'] || value;\n\nconst mapTracks = (tracks, user) => tracks.map(({\n  artist,\n  album,\n  name,\n  mbid,\n  url,\n  date,\n  image: images,\n}) => ({\n  artist: getText(artist),\n  album: getText(album),\n  name,\n  mbid,\n  url,\n  date: getText(date),\n  image: getText(getImage(images)),\n  user,\n}));\n\nexport const getPlayTimeline = async (user) => {\n  const { data: { friends: { user: friends } } } = await getUserFriends(user);\n  const users = [user, ...friends.map(({ name }) => name)];\n\n  const usersTracks = await Promise\n    .all(users\n      .map(async (user) => {\n        const { data } = await getUserRecentTracks(user);\n        const { recenttracks: { track } } = data;\n        return groupSequential(mapTracks(track, user), 'album');\n      }));\n\n  const data = orderBy(concat(...usersTracks), ['date'], ['desc'] );\n  return { data };\n}\n","import React from 'react';\nimport { getUserInfo } from '../../api';\n\n/**\n * @typedef {Object} LastFMUser\n * @property {String} name\n * @property {String} playcount\n * @property {String} country\n * @property {String} url\n */\n\n/**\n * @typedef {Object} AppContextValue\n * @property {LastFMUser} user\n * @property {function(LastFMUser): void} setUser\n */\n\nexport const AppContext = React.createContext(undefined);\n\nexport const AppContextProvider = ({ children }) => {\n  const [user, setUser] = React.useState(undefined);\n\n  /** @type {AppContextValue} */\n  const context = {\n    user,\n    setUser: (u) => {\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(u);\n    },\n  };\n\n  const updateUserData = async () => {\n    if (!user) return;\n    const {\n      data: { user: foundUser },\n    } = await getUserInfo(user.name);\n\n    const {\n      playcount, name, url, country,\n    } = foundUser;\n\n    setUser({\n      playcount, name, url, country,\n    });\n  };\n\n  React.useEffect(() => {\n    if (user === undefined) {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          setUser(JSON.parse(storedUser));\n          updateUserData();\n          return;\n        } catch (error) {\n          setUser(undefined);\n          return;\n        }\n      }\n    } else {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  return (\n    <AppContext.Provider value={context}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n/** @returns {AppContextValue} */\nexport const useAppContext = () => React.useContext(AppContext);\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport {\n  Card, Skeleton, Typography, Row, Col,\n} from 'antd';\n\nimport { useAppContext } from '../MainApp/appContext';\nimport * as api from '../../api';\n\nconst { Title, Text } = Typography;\n\nconst Feed = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState({});\n  const [timeline, setTimeline] = React.useState([]);\n  const { user } = useAppContext();\n\n  // console.log(user, data)\n\n  const loadUserData = async () => {\n    setLoading(true);\n\n    const dataPieces = await Promise.all([\n      api.getPlayTimeline(user.name),\n      api.getUserRecentTracks(user.name),\n      api.getUserTopAlbums(user.name),\n      api.getUserTopArtists(user.name),\n      api.getUserTopTracks(user.name),\n      api.getUserWeeklyAlbums(user.name),\n      api.getUserWeeklyArtists(user.name),\n      api.getUserWeeklyTracks(user.name),\n    ]);\n\n    const [\n      playTimeline,\n      { recenttracks: recentTracks },\n      { topalbums: topAlbums },\n      { topartists: topArtists },\n      { toptracks: topTracks },\n      { weeklyalbumchart: weeklyAlbums },\n      { weeklyartistchart: weeklyArtists },\n      { weeklytrackchart: weeklyTracks },\n    ] = dataPieces\n      .map(({ data }) => data);\n\n    setData({\n      recentTracks,\n      topAlbums,\n      topArtists,\n      topTracks,\n      weeklyAlbums,\n      weeklyArtists,\n      weeklyTracks,\n    });\n\n    setTimeline(playTimeline);\n\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    loadUserData();\n  }, [null]);\n\n  if (loading) {\n    return (\n      <Row justify=\"center\">\n        <Col span={24} lg={12}>\n          {Array(3).fill(null).map(() => (\n            <Card key={uniqueId('skeleton')} style={{ marginBottom: '1em' }}>\n              <Skeleton avatar paragraph={{ rows: 4 }} />\n            </Card>\n          ))}\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      {timeline.map((track) => (\n        <Row justify=\"center\" key={`${track.user}.${track.date}`}>\n          <Col span={24} lg={12}>\n            <Card\n              style={{ marginBottom: '1em' }}\n              cover={\n                <img\n                  alt={`${track.artist} - ${track.album} - ${track.name}`}\n                  src={track.image}\n                />\n              }\n            >\n              <Card.Meta\n                title={(\n                  <>\n                    <Title\n                      level={4}\n                      style={{ display: 'block', marginBottom: '0' }}\n                    >\n                      {track.key || track.name}\n                    </Title>\n                    {track.key\n                      ? <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                      : (\n                        <>\n                          <Text style={{ display: 'block' }} type=\"secondary\">{track.album}</Text>\n                          <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                        </>\n                      )}\n                  </>\n                )}\n              />\n              <div style={{ marginTop: '1em' }}>\n                <Row>\n                  <Col span={12}>\n                    <Text strong>\n                      {track.user}\n                    </Text>\n                  </Col>\n                  <Col span={12} style={{ textAlign: 'right' }}>\n                    <Text type=\"secondary\">\n                      Played at {track.date}\n                    </Text>\n                  </Col>\n                </Row>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      ))}\n    </>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\nimport {\n  Layout, Row, Col, Avatar, Tag, Typography, Menu, Statistic,\n} from 'antd';\n\nimport {\n  UserOutlined,\n  PicCenterOutlined,\n  MenuFoldOutlined,\n  MenuUnfoldOutlined\n} from '@ant-design/icons';\n\nimport Feed from '../Feed/Feed';\nimport { useAppContext } from './appContext';\n\nconst { Text } = Typography;\n\nconst MainApp = () => {\n  const [collapsed, setCollapsed] = React.useState(true);\n  const { user } = useAppContext();\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        collapsible\n        collapsed={collapsed}\n        trigger={null}\n      >\n        <div className=\"logo\" style={{ height: '64px' }} />\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          style={{ height: '100%', borderRight: 0 }}\n          defaultSelectedKeys={['1']}\n        >\n          <Menu.Item key=\"1\">\n            <PicCenterOutlined />\n            <span>Timeline</span>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout>\n        <Layout.Header style={{ background: '#fff', padding: 0 }}>\n          <span\n            onClick={() => setCollapsed(!collapsed)}\n            className=\"trigger\"\n            style={{ marginLeft: '16px' }}\n          >\n            {collapsed\n              ? <MenuUnfoldOutlined style={{ fontSize: '2em' }} />\n              : <MenuFoldOutlined style={{ fontSize: '2em' }} />}\n          </span>\n          <span style={{ float: 'right' }}>\n            <Text strong style={{ margin: '0 .5em' }}>{user.name}</Text>\n            <Tag color=\"geekblue\">{user.playcount} plays</Tag>\n            <Avatar size=\"large\" icon={<UserOutlined />} />\n          </span>\n        </Layout.Header>\n        <Layout.Content style={{ margin: '2em' }}>\n          <Row gutter={24}>\n            <Col span={24}>\n              <Feed />\n            </Col>\n          </Row>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport {\n  Form, Input, Button, Card, Row, Col, Layout,\n} from 'antd';\n\nimport { getUserInfo } from './api';\nimport './App.css';\nimport MainApp from './components/MainApp';\nimport { AppContextProvider, useAppContext } from './components/MainApp/appContext';\n\nfunction App() {\n  const [setupUser, setSetupUser] = React.useState('');\n  const { user, setUser } = useAppContext();\n\n  const getUserDetails = async () => {\n    try  {\n      const {\n        data: { user: foundUser },\n      } = await getUserInfo(setupUser);\n\n      const {\n        playcount, name, url, country,\n      } = foundUser;\n\n      setUser({\n        playcount, name, url, country,\n      });\n    } catch (error) {\n      const { response } = error;\n      if (response) {\n        const { data } = response;\n        if (data.message) {\n          console.log(data.message);\n          return;\n        }\n      }\n      console.log(error);\n    }\n  };\n\n  if (user) {\n    return (<MainApp />);\n  }\n\n  return (\n    <Layout>\n      <Row\n        gutter={24}\n        style={{ height: '100vh' }}\n        justify=\"center\"\n      >\n        <Col span={12}>\n          <Card className=\"App\" title=\"Last FM Grams\" style={{ marginTop: '2em' }}>\n            <Form.Item label=\"Last.FM Username\">\n              <Input\n                value={setupUser}\n                onChange={({ target }) => setSetupUser(target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button onClick={getUserDetails} type=\"primary\">\n                Setup\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n\nexport default () => (\n  <AppContextProvider>\n    <Row gutter={24}>\n      <Col span={24}>\n        <App />\n      </Col>\n    </Row>\n  </AppContextProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}