{"version":3,"sources":["utils/groupSequential.js","api.js","components/MainApp/appContext.js","components/Feed/TimelineEntry.js","components/Feed/index.js","components/MySummary/index.js","components/MainApp/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["groupSequential","collection","predicate","groups","lastUsed","ci","forEach","item","key","items","push","Object","values","api","axios","create","baseURL","interceptors","request","use","config","params","api_key","process","format","getUserInfo","user","get","getUserFriends","getUserRecentTracks","getUserTopAlbums","getUserTopArtists","getUserTopTracks","getUserWeeklyAlbums","getUserWeeklyArtists","getUserWeeklyTracks","getImage","images","reverse","getText","value","mapTracks","tracks","map","artist","album","name","mbid","url","date","image","getPlayTimeline","a","friends","data","users","Promise","all","track","recenttracks","usersTracks","orderBy","concat","AppContext","React","createContext","undefined","AppContextProvider","children","useState","setUser","context","u","localStorage","setItem","JSON","stringify","updateUserData","foundUser","playcount","country","useEffect","storedUser","getItem","parse","error","Provider","useAppContext","useContext","Title","Typography","Text","TimelineEntry","justify","span","lg","style","marginBottom","cover","alt","src","Meta","title","level","display","strong","type","marginTop","textAlign","Feed","loading","setLoading","timeline","setTimeline","loadUserData","playTimeline","Array","fill","uniqueId","avatar","paragraph","rows","MySummary","setData","console","log","dataPieces","recentTracks","topAlbums","topalbums","topArtists","topartists","topTracks","toptracks","weeklyAlbums","weeklyalbumchart","weeklyArtists","weeklyartistchart","weeklyTracks","weeklytrackchart","margin","gutter","itemLayout","dataSource","slice","renderItem","Item","href","rank","description","footer","moment","unix","parseInt","from","to","shape","MainApp","minHeight","Header","padding","position","zIndex","width","mode","theme","defaultSelectedKeys","color","PicCenterOutlined","UserOutlined","float","size","icon","Content","path","component","exact","Login","setupUser","setSetupUser","getUserDetails","response","message","height","className","label","onChange","target","onClick","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1421a180.chunk.js","sourcesContent":["\nconst groupSequential = (collection, predicate) => {\n  const groups = {};\n  let lastUsed = null;\n  let ci = 0;\n\n  collection.forEach((item) => {\n    if (item[predicate] !== lastUsed) {\n      ci += 1;\n      lastUsed = item[predicate];\n      groups[`${ci}.${lastUsed}`] = {\n        ...item,\n        key: lastUsed,\n        items: [item],\n      };\n    }\n\n    groups[`${ci}.${lastUsed}`].items.push(item);\n  });\n\n  return Object.values(groups);\n};\n\nexport default groupSequential;\n","import axios from 'axios';\nimport orderBy from 'lodash/orderBy';\nimport concat from 'lodash/concat';\nimport groupSequential from './utils/groupSequential';\n\nconst apiBase = 'https://ws.audioscrobbler.com/2.0';\nconst apiKey = process.env.REACT_APP_LAST_FM_API_KEY;\n\nconst api = axios.create({\n  baseURL: apiBase,\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.api_key = apiKey;\n  config.params.format = 'json';\n  return config;\n});\n\nexport const getUserInfo = (user) => api\n  .get(`/?method=user.getinfo&user=${user}`);\n\nexport const getUserFriends = (user) => api\n  .get(`/?method=user.getfriends&user=${user}`);\n\nexport const getUserRecentTracks = (user) => api\n  .get(`/?method=user.getrecenttracks&user=${user}`);\n\nexport const getUserTopAlbums = (user) => api\n  .get(`/?method=user.gettopalbums&user=${user}`);\n\nexport const getUserTopArtists = (user) => api\n  .get(`/?method=user.gettopartists&user=${user}`);\n\nexport const getUserTopTracks = (user) => api\n  .get(`/?method=user.gettoptracks&user=${user}`);\n\nexport const getUserWeeklyAlbums = (user) => api\n  .get(`/?method=user.getweeklyalbumchart&user=${user}`);\n\nexport const getUserWeeklyArtists = (user) => api\n  .get(`/?method=user.getweeklyartistchart&user=${user}`);\n\nexport const getUserWeeklyTracks = (user) => api\n  .get(`/?method=user.getweeklytrackchart&user=${user}`);\n\nconst getImage = (images) => {\n  const [image] = images.reverse();\n  return image;\n};\n\nconst getText = (value) => value['#text'] || value;\n\nconst mapTracks = (tracks, user) => tracks.map(({\n  artist,\n  album,\n  name,\n  mbid,\n  url,\n  date,\n  image: images,\n}) => ({\n  artist: getText(artist),\n  album: getText(album),\n  name,\n  mbid,\n  url,\n  date: getText(date),\n  image: getText(getImage(images)),\n  user,\n}));\n\nexport const getPlayTimeline = async (user) => {\n  const { data: { friends: { user: friends } } } = await getUserFriends(user);\n  const users = [user, ...friends.map(({ name }) => name)];\n\n  const usersTracks = await Promise\n    .all(users\n      .map(async (user) => {\n        const { data } = await getUserRecentTracks(user);\n        const { recenttracks: { track } } = data;\n        return groupSequential(mapTracks(track, user), 'album');\n      }));\n\n  const data = orderBy(concat(...usersTracks), ['date'], ['desc'] );\n  return { data };\n}\n","import React from 'react';\nimport { getUserInfo } from '../../api';\n\n/**\n * @typedef {Object} LastFMUser\n * @property {String} name\n * @property {String} playcount\n * @property {String} country\n * @property {String} url\n */\n\n/**\n * @typedef {Object} AppContextValue\n * @property {LastFMUser} user\n * @property {function(LastFMUser): void} setUser\n */\n\nexport const AppContext = React.createContext(undefined);\n\nexport const AppContextProvider = ({ children }) => {\n  const [user, setUser] = React.useState(undefined);\n\n  /** @type {AppContextValue} */\n  const context = {\n    user,\n    setUser: (u) => {\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(u);\n    },\n  };\n\n  const updateUserData = async () => {\n    if (!user) return;\n    const {\n      data: { user: foundUser },\n    } = await getUserInfo(user.name);\n\n    const {\n      playcount, name, url, country,\n    } = foundUser;\n\n    setUser({\n      playcount, name, url, country,\n    });\n  };\n\n  React.useEffect(() => {\n    if (user === undefined) {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          setUser(JSON.parse(storedUser));\n          updateUserData();\n          return;\n        } catch (error) {\n          setUser(undefined);\n          return;\n        }\n      }\n    } else {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  return (\n    <AppContext.Provider value={context}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n/** @returns {AppContextValue} */\nexport const useAppContext = () => React.useContext(AppContext);\n","import React from 'react';\n\nimport {\n  Card, Typography, Row, Col,\n} from 'antd';\n\nconst { Title, Text } = Typography;\n\nconst TimelineEntry = ({ track }) => (\n  <Row justify=\"center\" key={`${track.user}.${track.date}`}>\n    <Col span={24} lg={12}>\n      <Card\n        style={{ marginBottom: '1em' }}\n        cover={\n          <img\n            alt={`${track.artist} - ${track.album} - ${track.name}`}\n            src={track.image}\n          />\n        }\n      >\n        <Card.Meta\n          title={(\n            <>\n              <Title\n                level={4}\n                style={{ display: 'block', marginBottom: '0' }}\n              >\n                {track.key || track.name}\n              </Title>\n              {track.key\n                ? <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                : (\n                  <>\n                    <Text style={{ display: 'block' }} type=\"secondary\">{track.album}</Text>\n                    <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                  </>\n                )}\n            </>\n          )}\n        />\n        <div style={{ marginTop: '1em' }}>\n          <Row>\n            <Col span={12}>\n              <Text strong>\n                {track.user}\n              </Text>\n            </Col>\n            <Col span={12} style={{ textAlign: 'right' }}>\n              <Text type=\"secondary\">\n                Played at {track.date}\n              </Text>\n            </Col>\n          </Row>\n        </div>\n      </Card>\n    </Col>\n  </Row>\n);\n\nexport default TimelineEntry;\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport {\n  Card, Skeleton, Row, Col,\n} from 'antd';\n\nimport { useAppContext } from '../MainApp/appContext';\nimport * as api from '../../api';\nimport TimelineEntry from './TimelineEntry';\n\nconst Feed = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [timeline, setTimeline] = React.useState([]);\n  const { user } = useAppContext();\n\n  const loadUserData = async () => {\n    setLoading(true);\n    const { data: playTimeline } = await api.getPlayTimeline(user.name);\n    setTimeline(playTimeline);\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    loadUserData();\n  }, [null]);\n\n  if (loading) {\n    return (\n      <Row justify=\"center\">\n        <Col span={24} lg={12}>\n          {Array(3).fill(null).map(() => (\n            <Card key={uniqueId('skeleton')} style={{ marginBottom: '1em' }}>\n              <Skeleton avatar paragraph={{ rows: 4 }} />\n            </Card>\n          ))}\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      {timeline.map((track) => (<TimelineEntry track={track} />))}\n    </>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport slice from 'lodash/slice';\n\nimport {\n  Card, Skeleton, Row, Col, Statistic, List, Typography, Avatar,\n} from 'antd';\n\nimport { useAppContext } from '../MainApp/appContext';\nimport * as api from '../../api';\nimport moment from 'moment';\n\nconst { Text } = Typography;\n\nconst MySummary = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [data, setData] = React.useState({});\n  const { user } = useAppContext();\n\n  console.log(user)\n\n  const loadUserData = async () => {\n    setLoading(true);\n\n    const dataPieces = await Promise.all([\n      api.getUserRecentTracks(user.name),\n      api.getUserTopAlbums(user.name),\n      api.getUserTopArtists(user.name),\n      api.getUserTopTracks(user.name),\n      api.getUserWeeklyAlbums(user.name),\n      api.getUserWeeklyArtists(user.name),\n      api.getUserWeeklyTracks(user.name),\n      api.getUserFriends(user.name),\n    ]);\n\n    const [\n      { recenttracks: recentTracks },\n      { topalbums: topAlbums },\n      { topartists: topArtists },\n      { toptracks: topTracks },\n      { weeklyalbumchart: weeklyAlbums },\n      { weeklyartistchart: weeklyArtists },\n      { weeklytrackchart: weeklyTracks },\n      { friends },\n    ] = dataPieces\n      .map(({ data }) => data);\n\n    setData({\n      recentTracks,\n      topAlbums,\n      topArtists,\n      topTracks,\n      weeklyAlbums,\n      weeklyArtists,\n      weeklyTracks,\n      friends,\n    });\n\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    loadUserData();\n  }, [null]);\n\n  if (loading) {\n    return (\n      <Row justify=\"center\">\n        <Col span={24} lg={12}>\n          {Array(3).fill(null).map(() => (\n            <Card key={uniqueId('skeleton')} style={{ marginBottom: '1em' }}>\n              <Skeleton avatar paragraph={{ rows: 4 }} />\n            </Card>\n          ))}\n        </Col>\n      </Row>\n    );\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ margin: '2em' }}>\n      <Row gutter={24} style={{ marginBottom: '2em' }}>\n        <Col span={24}>\n          <Card title=\"The Basics\">\n            <Statistic title=\"Scrobbled Plays\" value={user.playcount} />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24} lg={24}>\n          <Card\n            title=\"Top Artists (This Week)\"\n            style={{ marginBottom: '2em' }}\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={slice(data.weeklyArtists.artist, 0, 5)}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    title={<a href={item.url}>{item['@attr'].rank}. {item.name}</a>}\n                    description={<>Played {item.playcount} times. </>}\n                  />\n                </List.Item>\n              )}\n              footer={\n                <Text>\n                  {moment.unix(parseInt(data.weeklyArtists['@attr'].from, 10)).format('Do MMM, YYYY')}\n                  {' to '}\n                  {moment.unix(parseInt(data.weeklyArtists['@attr'].to, 10)).format('Do MMM, YYYY')}\n                </Text>\n              }\n            />\n          </Card>\n        </Col>\n        <Col span={24} lg={24}>\n          <Card\n            title=\"Top Artists (This Week)\"\n            style={{ marginBottom: '2em' }}\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={slice(data.weeklyAlbums.album, 0, 5)}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    title={<a href={item.url}>{item['@attr'].rank}. {item.name} - {item.artist['#text']}</a>}\n                    description={<>Played {item.playcount} times. </>}\n                  />\n                </List.Item>\n              )}\n              footer={\n                <Text>\n                  {moment.unix(parseInt(data.weeklyAlbums['@attr'].from, 10)).format('Do MMM, YYYY')}\n                  {' to '}\n                  {moment.unix(parseInt(data.weeklyAlbums['@attr'].to, 10)).format('Do MMM, YYYY')}\n                </Text>\n              }\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24} lg={12}>\n          <Card\n            title=\"Top Tracks (This Week)\"\n            style={{ marginBottom: '2em' }}\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={slice(data.weeklyTracks.track, 0, 5)}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar shape=\"square\" src={item.image.reverse()[0]['#text']} />}\n                    title={<a href={item.url}>{item['@attr'].rank}. {item.name} - {item.artist['#text']}</a>}\n                    description={<>Played {item.playcount} times.</>}\n                  />\n                </List.Item>\n              )}\n              footer={\n                <Text>\n                  {moment.unix(parseInt(data.weeklyTracks['@attr'].from, 10)).format('Do MMM, YYYY')}\n                  {' to '}\n                  {moment.unix(parseInt(data.weeklyTracks['@attr'].to, 10)).format('Do MMM, YYYY')}\n                </Text>\n              }\n\n            />\n          </Card>\n        </Col>\n        <Col span={24} lg={12}>\n          <Card\n            title=\"Recent Tracks\"\n            style={{ marginBottom: '2em' }}\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={slice(data.recentTracks.track, 0, 5)}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar shape=\"square\" src={item.image.reverse()[0]['#text']} />}\n                    title={<a href={item.url}>{item.name}</a>}\n                    description={<>{item.album['#text']} - {item.artist['#text']}</>}\n                  />\n                </List.Item>\n              )}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default MySummary;\n","import React from 'react';\nimport { Switch, Link, Route } from 'react-router-dom';\n\nimport {\n  Layout, Row, Col, Avatar, Tag, Menu,\n} from 'antd';\n\nimport {\n  UserOutlined,\n  PicCenterOutlined,\n} from '@ant-design/icons';\n\nimport Feed from '../Feed';\nimport { useAppContext } from './appContext';\nimport MySummary from '../MySummary';\n\nconst MainApp = () => {\n  const { user } = useAppContext();\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Layout.Header\n        style={{\n          padding: '0 1em',\n          position: 'fixed',\n          zIndex: 1,\n          width: '100%',\n        }}\n      >\n        <Menu\n          mode=\"horizontal\"\n          theme=\"dark\"\n          defaultSelectedKeys={['1']}\n        >\n          <Menu.Item key=\"0\">\n            <span style={{ color: '#fff' }}>Last.fm Grams</span>\n          </Menu.Item>\n          <Menu.Item key=\"1\">\n            <Link to=\"/\">\n              <PicCenterOutlined />\n              <span>Timeline</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/my-summary\">\n              <UserOutlined />\n              <span>My Summary</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"3\" style={{ float: 'right' }}>\n            <Avatar size=\"large\" icon={<UserOutlined />} />\n            <span style={{ margin: '0 .5em', color: '#fff' }}>\n              {user.name}\n            </span>\n            <Tag color=\"geekblue\">{user.playcount} plays</Tag>\n          </Menu.Item>\n        </Menu>\n      </Layout.Header>\n      <Layout>\n        <Layout.Content style={{ marginTop: '64px' }}>\n          <Row gutter={24} style={{ marginTop: '2em' }}>\n            <Col span={24}>\n              <Switch>\n                <Route path=\"/my-summary\" component={MySummary} />\n                <Route path=\"/\" exact component={Feed} />\n              </Switch>\n            </Col>\n          </Row>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport {\n  Form, Input, Button, Card, Row, Col, Layout,\n} from 'antd';\n\nimport { getUserInfo } from '../../api';\nimport { useAppContext } from '../MainApp/appContext';\n\nconst Login = () => {\n  const [setupUser, setSetupUser] = React.useState('');\n  const { setUser } = useAppContext();\n\n  const getUserDetails = async () => {\n    try  {\n      const {\n        data: { user: foundUser },\n      } = await getUserInfo(setupUser);\n\n      const {\n        playcount, name, url, country,\n      } = foundUser;\n\n      setUser({\n        playcount, name, url, country,\n      });\n    } catch (error) {\n      const { response } = error;\n      if (response) {\n        const { data } = response;\n        if (data.message) {\n          console.log(data.message);\n          return;\n        }\n      }\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <Row\n        gutter={24}\n        style={{ height: '100vh' }}\n        justify=\"center\"\n      >\n        <Col span={12}>\n          <Card className=\"App\" title=\"Last FM Grams\" style={{ marginTop: '2em' }}>\n            <Form.Item label=\"Last.FM Username\">\n              <Input\n                value={setupUser}\n                onChange={({ target }) => setSetupUser(target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button onClick={getUserDetails} type=\"primary\">\n                Setup\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport MainApp from './components/MainApp';\nimport { AppContextProvider, useAppContext } from './components/MainApp/appContext';\nimport Login from './components/Login';\n\nfunction App() {\n  const { user } = useAppContext();\n\n  if (!user) {\n    return <Login />;\n  }\n\n  return <MainApp />;\n}\n\nexport default () => (\n  <AppContextProvider>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </AppContextProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}