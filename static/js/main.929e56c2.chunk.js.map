{"version":3,"sources":["utils/groupSequential.js","api.js","components/MainApp/appContext.js","components/Feed/TimelineEntry.js","components/Feed/index.js","components/MySummary/AlbumsCard.js","components/MySummary/ArtistsCard.js","components/MySummary/TracksCard.js","components/MySummary/index.js","components/MainApp/index.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["groupSequential","collection","predicate","groups","lastUsed","ci","forEach","item","key","items","push","Object","values","api","axios","create","baseURL","interceptors","request","use","config","params","api_key","process","format","getUserInfo","user","get","getUserFriends","getUserRecentTracks","getUserTopAlbums","period","getUserTopArtists","getUserTopTracks","getUserWeeklyAlbums","getUserWeeklyArtists","getUserWeeklyTracks","getImage","images","reverse","getText","value","mapTracks","tracks","map","artist","album","name","mbid","url","date","image","getPlayTimeline","a","friends","data","users","Promise","all","track","recenttracks","usersTracks","orderBy","concat","AppContext","React","createContext","undefined","AppContextProvider","children","useState","setUser","context","u","localStorage","setItem","JSON","stringify","updateUserData","foundUser","playcount","country","useEffect","storedUser","getItem","parse","error","Provider","useAppContext","useContext","Title","Typography","Text","TimelineEntry","justify","span","lg","style","marginBottom","cover","alt","src","Meta","title","level","display","strong","type","marginTop","textAlign","Feed","loading","setLoading","refreshing","setRefreshing","timeline","setTimeline","loadUserData","playTimeline","refreshData","Array","fill","uniqueId","avatar","paragraph","rows","onRefresh","indicator","activate","deactivate","release","SyncOutlined","spin","finish","WeeklyAlbumsTab","albums","attr","itemLayout","dataSource","slice","renderItem","Item","href","rank","shape","description","footer","from","to","moment","unix","parseInt","AlbumsCard","weeklyAlbums","topAlbums","tabKey","setTabKey","tabList","tab","component","currentTab","find","i","activeTabKey","onTabChange","WeeklyArtistsTab","ArtistsCard","weeklyArtists","topArtists","WeeklyTracksTab","TracksCard","recentTracks","weeklyTracks","topTracks","MySummary","setData","dataPieces","topalbums","topartists","toptracks","weeklyalbumchart","weeklyartistchart","weeklytrackchart","gutter","NavigationBar","mode","rightContent","icon","UserOutlined","position","top","left","width","MainApp","selectedTab","setSelectedTab","height","unselectedTintColor","tintColor","barTintColor","CustomerServiceOutlined","selectedIcon","CustomerServiceFilled","selected","onPress","ExperimentOutlined","ExperimentFilled","Login","setupUser","setSetupUser","getUserDetails","response","message","console","log","className","label","onChange","target","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.929e56c2.chunk.js","sourcesContent":["\nconst groupSequential = (collection, predicate) => {\n  const groups = {};\n  let lastUsed = null;\n  let ci = 0;\n\n  collection.forEach((item) => {\n    if (item[predicate] !== lastUsed) {\n      ci += 1;\n      lastUsed = item[predicate];\n      groups[`${ci}.${lastUsed}`] = {\n        ...item,\n        key: lastUsed,\n        items: [item],\n      };\n    }\n\n    groups[`${ci}.${lastUsed}`].items.push(item);\n  });\n\n  return Object.values(groups);\n};\n\nexport default groupSequential;\n","import axios from 'axios';\nimport orderBy from 'lodash/orderBy';\nimport concat from 'lodash/concat';\nimport groupSequential from './utils/groupSequential';\n\nconst apiBase = 'https://ws.audioscrobbler.com/2.0';\nconst apiKey = process.env.REACT_APP_LAST_FM_API_KEY;\n\nconst api = axios.create({\n  baseURL: apiBase,\n});\n\napi.interceptors.request.use((config) => {\n  config.params = config.params || {};\n  config.params.api_key = apiKey;\n  config.params.format = 'json';\n  return config;\n});\n\nexport const getUserInfo = (user) => api\n  .get(`/?method=user.getinfo&user=${user}`);\n\nexport const getUserFriends = (user) => api\n  .get(`/?method=user.getfriends&user=${user}`);\n\nexport const getUserRecentTracks = (user) => api\n  .get(`/?method=user.getrecenttracks&user=${user}`);\n\nexport const getUserTopAlbums = (user, period = 'overall') => api\n  .get(`/?method=user.gettopalbums&user=${user}&period=${period}`);\n\nexport const getUserTopArtists = (user, period = 'overall') => api\n  .get(`/?method=user.gettopartists&user=${user}&period=${period}`);\n\nexport const getUserTopTracks = (user, period = 'overall') => api\n  .get(`/?method=user.gettoptracks&user=${user}&period=${period}`);\n\nexport const getUserWeeklyAlbums = (user) => api\n  .get(`/?method=user.getweeklyalbumchart&user=${user}`);\n\nexport const getUserWeeklyArtists = (user) => api\n  .get(`/?method=user.getweeklyartistchart&user=${user}`);\n\nexport const getUserWeeklyTracks = (user) => api\n  .get(`/?method=user.getweeklytrackchart&user=${user}`);\n\nconst getImage = (images) => {\n  const [image] = images.reverse();\n  return image;\n};\n\nconst getText = (value) => (value && value['#text']) || value;\n\nconst mapTracks = (tracks, user) => tracks.map(({\n  artist,\n  album,\n  name,\n  mbid,\n  url,\n  date,\n  image: images,\n}) => ({\n  artist: getText(artist),\n  album: getText(album),\n  name,\n  mbid,\n  url,\n  date: getText(date),\n  image: getText(getImage(images)),\n  user,\n}));\n\nexport const getPlayTimeline = async (user) => {\n  const { data: { friends: { user: friends } } } = await getUserFriends(user);\n  const users = [user, ...friends.map(({ name }) => name)];\n\n  const usersTracks = await Promise\n    .all(users\n      .map(async (user) => {\n        const { data } = await getUserRecentTracks(user);\n        const { recenttracks: { track } } = data;\n        return groupSequential(mapTracks(track, user), 'album');\n      }));\n\n  const data = orderBy(concat(...usersTracks), ['date'], ['desc'] );\n  return { data };\n}\n","import React from 'react';\nimport { getUserInfo } from '../../api';\n\n/**\n * @typedef {Object} LastFMUser\n * @property {String} name\n * @property {String} playcount\n * @property {String} country\n * @property {String} url\n */\n\n/**\n * @typedef {Object} AppContextValue\n * @property {LastFMUser} user\n * @property {function(LastFMUser): void} setUser\n */\n\nexport const AppContext = React.createContext(undefined);\n\nexport const AppContextProvider = ({ children }) => {\n  const [user, setUser] = React.useState(undefined);\n\n  /** @type {AppContextValue} */\n  const context = {\n    user,\n    setUser: (u) => {\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(u);\n    },\n  };\n\n  const updateUserData = async () => {\n    if (!user) return;\n    const {\n      data: { user: foundUser },\n    } = await getUserInfo(user.name);\n\n    const {\n      playcount, name, url, country,\n    } = foundUser;\n\n    setUser({\n      playcount, name, url, country,\n    });\n  };\n\n  React.useEffect(() => {\n    if (user === undefined) {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          setUser(JSON.parse(storedUser));\n          updateUserData();\n          return;\n        } catch (error) {\n          setUser(undefined);\n          return;\n        }\n      }\n    } else {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  }, [user]);\n\n  return (\n    <AppContext.Provider value={context}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\n/** @returns {AppContextValue} */\nexport const useAppContext = () => React.useContext(AppContext);\n","import React from 'react';\n\nimport {\n  Card, Typography, Row, Col,\n} from 'antd';\n\nconst { Title, Text } = Typography;\n\nconst TimelineEntry = ({ track }) => (\n  <Row justify=\"center\" key={`${track.user}.${track.date}`}>\n    <Col span={24} lg={12}>\n      <Card\n        style={{ marginBottom: '1em' }}\n        cover={\n          <img\n            alt={`${track.artist} - ${track.album} - ${track.name}`}\n            src={track.image}\n          />\n        }\n      >\n        <Card.Meta\n          title={(\n            <>\n              <Title\n                level={4}\n                style={{ display: 'block', marginBottom: '0' }}\n              >\n                {track.key || track.name}\n              </Title>\n              {track.key\n                ? <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                : (\n                  <>\n                    <Text style={{ display: 'block' }} type=\"secondary\">{track.album}</Text>\n                    <Text style={{ display: 'block' }} strong>{track.artist}</Text>\n                  </>\n                )}\n            </>\n          )}\n        />\n        <div style={{ marginTop: '1em' }}>\n          <Row>\n            <Col span={12}>\n              <Text strong>\n                {track.user}\n              </Text>\n            </Col>\n            <Col span={12} style={{ textAlign: 'right' }}>\n              <Text type=\"secondary\">\n                Played at {track.date}\n              </Text>\n            </Col>\n          </Row>\n        </div>\n      </Card>\n    </Col>\n  </Row>\n);\n\nexport default TimelineEntry;\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport {\n  Card, Skeleton, Row, Col,\n} from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { PullToRefresh } from 'antd-mobile';\n\nimport { useAppContext } from '../MainApp/appContext';\nimport * as api from '../../api';\nimport TimelineEntry from './TimelineEntry';\n\nconst Feed = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [timeline, setTimeline] = React.useState([]);\n  const { user } = useAppContext();\n\n  const loadUserData = async () => {\n    setLoading(true);\n    const { data: playTimeline } = await api.getPlayTimeline(user.name);\n    setTimeline(playTimeline);\n    setLoading(false);\n  };\n\n  const refreshData = async () => {\n    setRefreshing(true);\n    await loadUserData();\n    setRefreshing(false);\n  };\n\n  React.useEffect(() => {\n    loadUserData();\n  }, [null]);\n\n  if (loading && !refreshing) {\n    return (\n      <Row justify=\"center\">\n        <Col span={24} lg={12}>\n          {Array(3).fill(null).map(() => (\n            <Card key={uniqueId('skeleton')} style={{ marginBottom: '1em' }}>\n              <Skeleton avatar paragraph={{ rows: 4 }} />\n            </Card>\n          ))}\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <PullToRefresh\n      refreshing={refreshing}\n      onRefresh={refreshData}\n      indicator={{\n        activate: \"Pull to refresh\",\n        deactivate: 'Release to cancel',\n        release: <SyncOutlined spin />,\n        finish: 'Done!',\n      }}\n    >\n      {timeline.map((track) => (<TimelineEntry track={track} />))}\n    </PullToRefresh>\n  );\n};\n\nexport default Feed;\n","import React from 'react';\nimport moment from 'moment';\nimport slice from 'lodash/slice';\nimport { Card, List, Typography, Avatar } from 'antd';\n\nconst { Text } = Typography;\n\nconst WeeklyAlbumsTab = ({ albums, attr }) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={slice(albums, 0, 10)}\n    renderItem={(item) => (\n      <List.Item>\n        <List.Item.Meta\n          title={(\n            <a href={item.url}>\n              {item['@attr'].rank}. {item.name} - {item.artist.name || item.artist['#text']}\n            </a>\n          )}\n          avatar={item.image\n            ? (\n              <Avatar shape=\"square\" src={item.image.reverse()[0]['#text']} />\n            ) : null}\n          description={<>Played {item.playcount} times. </>}\n        />\n      </List.Item>\n    )}\n    footer={\n      (attr.from && attr.to)\n        ? (\n          <Text>\n            {moment.unix(parseInt(attr.from, 10)).format('Do MMM, YYYY')}\n            {' to '}\n            {moment.unix(parseInt(attr.to, 10)).format('Do MMM, YYYY')}\n          </Text>\n        ) : null}\n  />\n);\n\nconst AlbumsCard = ({ weeklyAlbums, topAlbums }) => {\n  const [tabKey, setTabKey] = React.useState('weekly');\n\n  const tabList = [\n    {\n      key: 'weekly',\n      tab: 'This Week',\n      component: <WeeklyAlbumsTab albums={weeklyAlbums.album} attr={weeklyAlbums['@attr']} />\n    },\n    {\n      key: 'overall',\n      tab: 'Overall',\n      component: <WeeklyAlbumsTab albums={topAlbums.album} attr={topAlbums['@attr']} />\n    },\n  ];\n\n  const currentTab = tabList.find((i) => i.key === tabKey);\n\n  return (\n    <Card\n      title=\"Top Albums\"\n      style={{ marginBottom: '2em' }}\n      tabList={tabList}\n      activeTabKey={tabKey}\n      onTabChange={setTabKey}\n    >\n      {currentTab.component}\n    </Card>\n  );\n};\n\n// style={{ width: '100%' }}\n\n\nexport default AlbumsCard;\n","import React from 'react';\nimport moment from 'moment';\nimport slice from 'lodash/slice';\nimport { Card, List, Typography, Avatar } from 'antd';\n\nconst { Text } = Typography;\n\nconst WeeklyArtistsTab = ({ artist, attr }) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={slice(artist, 0, 10)}\n    renderItem={(item) => (\n      <List.Item>\n        <List.Item.Meta\n          title={(\n            <a href={item.url}>\n              {item['@attr'].rank}. {item.name}\n            </a>\n          )}\n          avatar={item.image\n            ? (<Avatar shape=\"circle\" src={item.image.reverse()[0]['#text']} />)\n            : null}\n          description={<>Played {item.playcount} times. </>}\n        />\n      </List.Item>\n    )}\n    footer={\n      (attr.from && attr.to)\n        ? (\n          <Text>\n            {moment.unix(parseInt(attr.from, 10)).format('Do MMM, YYYY')}\n            {' to '}\n            {moment.unix(parseInt(attr.to, 10)).format('Do MMM, YYYY')}\n          </Text>\n        ) : null}\n  />\n);\n\nconst ArtistsCard = ({\n  weeklyArtists, topArtists,\n}) => {\n  const [tabKey, setTabKey] = React.useState('weekly');\n\n  const tabList = [\n    {\n      key: 'weekly',\n      tab: 'This Week',\n      component: <WeeklyArtistsTab artist={weeklyArtists.artist} attr={weeklyArtists['@attr']} />\n    },\n    {\n      key: 'overall',\n      tab: 'Overall',\n      component: <WeeklyArtistsTab artist={topArtists.artist} attr={topArtists['@attr']} />\n    },\n  ];\n\n  const currentTab = tabList.find((i) => i.key === tabKey);\n\n  return (\n    <Card\n      title=\"Top Artists\"\n      style={{ marginBottom: '2em' }}\n      tabList={tabList}\n      activeTabKey={tabKey}\n      onTabChange={setTabKey}\n    >\n      {currentTab.component}\n    </Card>\n  );\n};\n\nexport default ArtistsCard;\n","import React from 'react';\nimport moment from 'moment';\nimport slice from 'lodash/slice';\nimport { Card, List, Typography, Avatar } from 'antd';\n\nconst { Text } = Typography;\n\nconst WeeklyTracksTab = ({ track, attr }) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={slice(track, 0, 5)}\n    renderItem={(item) => (\n      <List.Item>\n        <List.Item.Meta\n          title={(\n            <a href={item.url}>\n              {item['@attr'] && item['@attr'].rank ? `${item['@attr'].rank}. ` : ''}\n              {item.name} - {item.artist.name || item.artist['#text']}\n            </a>\n          )}\n          avatar={item.image\n            ? (\n              <Avatar shape=\"square\" src={item.image.reverse()[0]['#text']} />\n            ) : null}\n          description={item.playcount\n            ? (<>Played {item.playcount} times. </>)\n            : (<>{item.album['#text']} - {item.artist['#text']}</>)}\n        />\n      </List.Item>\n    )}\n    footer={\n      (attr.from && attr.to)\n        ? (\n          <Text>\n            {moment.unix(parseInt(attr.from, 10)).format('Do MMM, YYYY')}\n            {' to '}\n            {moment.unix(parseInt(attr.to, 10)).format('Do MMM, YYYY')}\n          </Text>\n        ) : null}\n  />\n);\n\nconst TracksCard = ({\n  recentTracks, weeklyTracks, topTracks,\n}) => {\n  const [tabKey, setTabKey] = React.useState('recent');\n\n  const tabList = [\n    {\n      key: 'recent',\n      tab: 'Recent',\n      component: <WeeklyTracksTab track={recentTracks.track} attr={recentTracks['@attr']} />\n    },\n    {\n      key: 'weekly',\n      tab: 'This Week',\n      component: <WeeklyTracksTab track={weeklyTracks.track} attr={weeklyTracks['@attr']} />\n    },\n    {\n      key: 'overall',\n      tab: 'Overall',\n      component: <WeeklyTracksTab track={topTracks.track} attr={topTracks['@attr']} />\n    },\n  ];\n\n  const currentTab = tabList.find((i) => i.key === tabKey);\n\n  return (\n    <Card\n      title=\"Tracks\"\n      style={{ marginBottom: '2em' }}\n      tabList={tabList}\n      activeTabKey={tabKey}\n      onTabChange={setTabKey}\n    >\n      {currentTab.component}\n    </Card>\n  );\n};\n\nexport default TracksCard;\n","import React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport { PullToRefresh } from 'antd-mobile';\nimport { SyncOutlined } from '@ant-design/icons';\n\nimport {\n  Card, Skeleton, Row, Col, Statistic,\n} from 'antd';\n\nimport { useAppContext } from '../MainApp/appContext';\nimport * as api from '../../api';\nimport AlbumsCard from './AlbumsCard';\nimport ArtistsCard from './ArtistsCard';\nimport TracksCard from './TracksCard';\n\nconst MySummary = () => {\n  const [loading, setLoading] = React.useState(true);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [data, setData] = React.useState({});\n  const { user } = useAppContext();\n\n  const loadUserData = async () => {\n    setLoading(true);\n\n    const dataPieces = await Promise.all([\n      api.getUserRecentTracks(user.name),\n      api.getUserTopAlbums(user.name),\n      api.getUserTopArtists(user.name),\n      api.getUserTopTracks(user.name),\n      api.getUserWeeklyAlbums(user.name),\n      api.getUserWeeklyArtists(user.name),\n      api.getUserWeeklyTracks(user.name),\n      api.getUserFriends(user.name),\n    ]);\n\n    const [\n      { recenttracks: recentTracks },\n      { topalbums: topAlbums },\n      { topartists: topArtists },\n      { toptracks: topTracks },\n      { weeklyalbumchart: weeklyAlbums },\n      { weeklyartistchart: weeklyArtists },\n      { weeklytrackchart: weeklyTracks },\n      { friends },\n    ] = dataPieces\n      .map(({ data }) => data);\n\n    setData({\n      recentTracks,\n      topAlbums,\n      topArtists,\n      topTracks,\n      weeklyAlbums,\n      weeklyArtists,\n      weeklyTracks,\n      friends,\n    });\n\n    setLoading(false);\n  };\n\n  React.useEffect(() => {\n    loadUserData();\n  }, [null]);\n\n  if (loading && !refreshing) {\n    return (\n      <Row justify=\"center\">\n        <Col span={24} lg={12}>\n          {Array(3).fill(null).map(() => (\n            <Card key={uniqueId('skeleton')} style={{ marginBottom: '1em' }}>\n              <Skeleton avatar paragraph={{ rows: 4 }} />\n            </Card>\n          ))}\n        </Col>\n      </Row>\n    );\n  }\n\n  const refreshData = async () => {\n    setRefreshing(true);\n    await loadUserData();\n    setRefreshing(false);\n  };\n\n  return (\n    <PullToRefresh\n      refreshing={refreshing}\n      onRefresh={refreshData}\n      indicator={{\n        activate: \"Pull to refresh\",\n        deactivate: 'Release to cancel',\n        release: <SyncOutlined spin />,\n        finish: 'Done!',\n      }}\n    >\n      <Row gutter={24} style={{ marginBottom: '2em' }}>\n        <Col span={24}>\n          <Card title=\"The Basics\">\n            <Statistic title=\"Scrobbled Plays\" value={user.playcount} />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24} lg={24}>\n          <ArtistsCard\n            weeklyArtists={data.weeklyArtists}\n            topArtists={data.topArtists}\n          />\n        </Col>\n        <Col span={24} lg={24}>\n          <AlbumsCard\n            weeklyAlbums={data.weeklyAlbums}\n            topAlbums={data.topAlbums}\n          />\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col span={24} lg={12}>\n          <TracksCard\n            recentTracks={data.recentTracks}\n            weeklyTracks={data.weeklyTracks}\n            topTracks={data.topTracks}\n          />\n        </Col>\n      </Row>\n    </PullToRefresh>\n  );\n};\n\nexport default MySummary;\n","import React from 'react';\nimport { TabBar, NavBar } from 'antd-mobile';\n\nimport {\n  ExperimentOutlined,\n  ExperimentFilled,\n  CustomerServiceOutlined,\n  CustomerServiceFilled,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport Feed from '../Feed';\nimport MySummary from '../MySummary';\nimport { useAppContext } from './appContext';\nimport { Avatar } from 'antd';\n\nconst NavigationBar = ({ user }) => {\n  return (\n    <NavBar\n      mode=\"light\"\n      rightContent={[\n        <Avatar icon={<UserOutlined />} />,\n      ]}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n      }}\n    >\n      Last.fm Gram\n    </NavBar>\n  );\n};\n\nconst MainApp = () => {\n  const { user } = useAppContext();\n  const [selectedTab, setSelectedTab] = React.useState('feed');\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <TabBar\n        unselectedTintColor=\"#949494\"\n        tintColor=\"#33A3F4\"\n        barTintColor=\"white\"\n      >\n        <TabBar.Item\n          title=\"Timeline\"\n          key=\"feed\"\n          icon={<CustomerServiceOutlined />}\n          selectedIcon={<CustomerServiceFilled />}\n          selected={selectedTab === 'feed'}\n          onPress={() => setSelectedTab('feed')}\n        >\n          <NavigationBar user={user} />\n          <div style={{ marginTop: '61px' }}>\n            <Feed />\n          </div>\n        </TabBar.Item>\n        <TabBar.Item\n          title=\"My Summary\"\n          key=\"summary\"\n          icon={<ExperimentOutlined />}\n          selectedIcon={<ExperimentFilled />}\n          selected={selectedTab === 'summary'}\n          onPress={() => setSelectedTab('summary')}\n        >\n          <NavigationBar user={user} />\n          <div style={{ marginTop: '61px' }}>\n            <MySummary />\n          </div>\n        </TabBar.Item>\n      </TabBar>\n    </div>\n  );\n};\n\nexport default MainApp;\n","import React from 'react';\nimport {\n  Form, Input, Button, Card, Row, Col, Layout,\n} from 'antd';\n\nimport { getUserInfo } from '../../api';\nimport { useAppContext } from '../MainApp/appContext';\n\nconst Login = () => {\n  const [setupUser, setSetupUser] = React.useState('');\n  const { setUser } = useAppContext();\n\n  const getUserDetails = async () => {\n    try  {\n      const {\n        data: { user: foundUser },\n      } = await getUserInfo(setupUser);\n\n      const {\n        playcount, name, url, country,\n      } = foundUser;\n\n      setUser({\n        playcount, name, url, country,\n      });\n    } catch (error) {\n      const { response } = error;\n      if (response) {\n        const { data } = response;\n        if (data.message) {\n          console.log(data.message);\n          return;\n        }\n      }\n      console.log(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <Row\n        gutter={24}\n        style={{ height: '100vh' }}\n        justify=\"center\"\n      >\n        <Col span={12}>\n          <Card className=\"App\" title=\"Last FM Grams\" style={{ marginTop: '2em' }}>\n            <Form.Item label=\"Last.FM Username\">\n              <Input\n                value={setupUser}\n                onChange={({ target }) => setSetupUser(target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Button onClick={getUserDetails} type=\"primary\">\n                Setup\n              </Button>\n            </Form.Item>\n          </Card>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport './App.css';\nimport MainApp from './components/MainApp';\nimport { AppContextProvider, useAppContext } from './components/MainApp/appContext';\nimport Login from './components/Login';\n\nfunction App() {\n  const { user } = useAppContext();\n\n  if (!user) {\n    return <Login />;\n  }\n\n  return <MainApp />;\n}\n\nexport default () => (\n  <AppContextProvider>\n    <App />\n  </AppContextProvider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}